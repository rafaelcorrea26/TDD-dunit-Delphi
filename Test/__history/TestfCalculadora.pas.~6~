unit TestfCalculadora;
{

  Delphi DUnit Test Case
  ----------------------
  This unit contains a skeleton test case class generated by the Test Case Wizard.
  Modify the generated code to correctly setup and call the methods from the unit 
  being tested.

}

interface

uses
  TestFramework, Vcl.Dialogs, Winapi.Windows, System.SysUtils, System.Variants,
  Vcl.Graphics, fCalculadora, Winapi.Messages, Vcl.StdCtrls, Vcl.Controls, Vcl.Forms,
  System.Classes;

type
  // Test methods for class TfrmCalculadora

  TestTfrmCalculadora = class(TTestCase)
  strict private
    FfrmCalculadora: TfrmCalculadora;
  public
    procedure SetUp; override;
    procedure TearDown; override;
  published
    procedure TestSomar;
    procedure TestSubtrair;
    procedure TestMultiplicar;
    procedure TestDividir;
  end;

implementation

procedure TestTfrmCalculadora.SetUp;
begin
  FfrmCalculadora := TfrmCalculadora.Create(nil); // Iniciar tudo que precisa pros testes
end;

procedure TestTfrmCalculadora.TearDown;  // liberar da memória tudo que usou
begin
  FfrmCalculadora.Free;
  FfrmCalculadora := nil;
end;

procedure TestTfrmCalculadora.TestSomar;
var
  ReturnValue: Integer;
  ANumero2: Integer;
  ANumero1: Integer;
begin
  // TODO: Setup method call parameters
  ANumero1 := 2;
  ANumero2 := 2;
  ReturnValue := FfrmCalculadora.Somar(ANumero1, ANumero2);
  // TODO: Validate method results
  CheckEquals(4,ReturnValue, 'Erro - Deveria retornar [4] porém retornou:['+ReturnValue.ToString+']');
end;

procedure TestTfrmCalculadora.TestSubtrair;
var
  ReturnValue: Integer;
  ANumero2: Integer;
  ANumero1: Integer;
begin
  // TODO: Setup method call parameters
    ANumero1 := 8;
  ANumero2 := 4;
  ReturnValue := FfrmCalculadora.Subtrair(ANumero1, ANumero2);
  // TODO: Validate method results
  CheckEquals(4,ReturnValue, 'Erro - Deveria retornar [4] porém retornou:['+ReturnValue.ToString+']');
end;

procedure TestTfrmCalculadora.TestMultiplicar;
var
  ReturnValue: Integer;
  ANumero2: Integer;
  ANumero1: Integer;
begin
  // TODO: Setup method call parameters
  ANumero1 := 2;
  ANumero2 := 2;
  ReturnValue := FfrmCalculadora.Multiplicar(ANumero1, ANumero2);
  // TODO: Validate method results
  CheckEquals(4,ReturnValue, 'Erro - Deveria retornar [4] porém retornou:['+ReturnValue.ToString+']');
end;

procedure TestTfrmCalculadora.TestDividir;
var
  ReturnValue: Integer;
  ANumero2: Integer;
  ANumero1: Integer;
begin
  // TODO: Setup method call parameters
  ReturnValue := FfrmCalculadora.Dividir(ANumero1, ANumero2);
  // TODO: Validate method results
end;

initialization
  // Register any test cases with the test runner
  RegisterTest(TestTfrmCalculadora.Suite);
end.

